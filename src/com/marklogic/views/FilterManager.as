/* ----------------------------------------------------------------------	Copyright 2002-2010 MarkLogic Corporation.  All Rights Reserved.---------------------------------------------------------------------- */package com.marklogic.views {		import flash.display.Sprite;	import com.marklogic.controls.FilterBox;	import flash.events.MouseEvent;	import com.marklogic.events.CoocListEvent;	import com.caurina.transitions.Tweener;		public class FilterManager extends Sprite {				// Constants:		// Public Properties:		private static const PADDING:Number = 3;		private static const FILTER_WIDTH:Number = 23;		private static const FILTER_HEIGHT:Number = 315;		private var _filterHolder;		protected var _width:Number = 0;		protected var _filters:Array = [];		protected var _singleDisplay:Boolean = false;						// Private Properties:		// UI Elements:						// Initialization:		public function FilterManager() { configUI(); }				// Public Methods:				public function addFilter(p_value:FilterBox):void {			p_value.alpha = 0;						_filters.push(p_value);			//_filters.splice(0,0,p_value);			_filterHolder.addChild(p_value);			_filterHolder.addEventListener(MouseEvent.CLICK,onMouseClick,false,0,true);			_filterHolder.addEventListener(MouseEvent.MOUSE_OVER,onMouseOver,false,0,true);			_filterHolder.addEventListener(MouseEvent.MOUSE_OUT,onMouseOut,false,0,true);						p_value.y = FILTER_HEIGHT / 2;			_width = (_filterHolder.numChildren >= 2) ? ((FILTER_WIDTH+PADDING)*_filterHolder.numChildren) : FILTER_WIDTH;			invalidateDisplay();		}				public function get length():Number { return _filters.length; }				public function clearFilters():void {			var count:uint = _filterHolder.numChildren;			//if (count <= 1) { return; }			for (var i:uint=0;i<count;i++) {				Tweener.removeTweens(_filters[i],'scaleX','scaleY','alpha');				_filterHolder.removeChildAt(0);			}			_filters = [];		}				override public function get width():Number {			return _width;		}				public function set singleDisplay(p_value:Boolean):void {			_singleDisplay = p_value;		}				// Protected Methods:		// Private Methods:		protected function configUI():void {			_width = 0;			_filters = [];			_filterHolder = new Sprite();			addChild(_filterHolder);		}				protected function onMouseClick(p_event:MouseEvent):void {			var filterBox:FilterBox = p_event.target as FilterBox;			dispatchEvent(new CoocListEvent(CoocListEvent.FILTER_CLICK,{index:filterBox.index}));		}				protected function onMouseOver(p_event:MouseEvent):void {			p_event.target.bgColor = 0x677175;//0x2D4585;		}				protected function onMouseOut(p_event:MouseEvent):void {			p_event.target.bgColor = 0x363D41;		}				protected function invalidateDisplay():void {			var child:FilterBox;			if (_singleDisplay) {				child = _filters[0] as FilterBox;				child.alpha = 1;				Tweener.addTween(child,{x:6,time:.5,transition:'easeOut'});			} else {				var inc:int=0;				var l:Number = _filterHolder.numChildren-1;				for (var i:Number=l;i>=0;i--) {					child = _filters[i] as FilterBox;					//child.x = i*(FILTER_WIDTH+PADDING) + 6;					if (i == l-1) {						//child.alpha = 1;					} else {						child.scaleX = child.scaleY = 0;					}					//Tweener.addTween(child,{scaleX:1,scaleY:1,alpha:1,time:.5,delay:i*0.1,transition:'easeOut'});					Tweener.addTween(child,{x:i*(FILTER_WIDTH+PADDING) + 6,scaleX:1,scaleY:1,alpha:1,time:.5,delay:inc*0.1,transition:'easeOut'});					inc++;				}			}		}		/*		protected function invalidateDisplay():void {			var l:Number = _filterHolder.numChildren;			for (var i:Number=0;i<l;i++) {				var child:FilterBox = _filters[i] as FilterBox;				child.x = i*(FILTER_WIDTH+PADDING) + 6;				child.scaleX = child.scaleY = 0;				Tweener.addTween(child,{scaleX:1,scaleY:1,alpha:1,time:.5,delay:i*0.1,transition:'easeOut'});			}		}				*/	}	}